{"version":3,"sources":["components/Statistics/Statistics.js","components/FeedbackOptions/FeedbackOptions.js","components/Notification/Notification.js","components/Section/Section.js","App.js","index.js"],"names":["Statistics","props","good","neutral","bad","total","positivePercentage","FeedbackOptions","onLeaveFeedback","options","map","name","className","onClick","Notification","Section","title","children","App","useState","setGood","setNeutral","setBad","setTotal","setPositivePercentage","useEffect","Math","round","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"sRAEe,SAASA,EAAWC,GAC/B,IAAQC,EAAkDD,EAAlDC,KAAMC,EAA4CF,EAA5CE,QAASC,EAAmCH,EAAnCG,IAAKC,EAA8BJ,EAA9BI,MAAOC,EAAuBL,EAAvBK,mBACnC,OACI,qCACI,uCAAS,+BAAOJ,OAChB,0CAAY,+BAAQC,OACpB,sCAAQ,+BAAOC,OACf,wCAAU,+BAAOC,OACjB,oDAAiC,IAAVA,EAAc,EAAI,+BAAOC,IAAhD,U,MCPG,SAASC,EAAgBN,GACpC,IAAQO,EAA6BP,EAA7BO,gBAAiBC,EAAYR,EAAZQ,QACzB,OACA,mCACGA,EAAQC,KAAI,SAACC,GACZ,OACE,wBAAmBC,UAAS,cAASD,GAAQE,QAAS,kBAAIL,EAAgBG,IAA1E,SACGA,GADUA,QCTR,SAASG,IACtB,OACE,kDCAW,SAASC,EAAQd,GAC9B,IAAQe,EAAoBf,EAApBe,MAAOC,EAAahB,EAAbgB,SACf,OACE,qCACE,6BAAKD,IACJC,K,MC4DQC,MA3Df,WACE,MAAwBC,mBAAS,GAAjC,mBAAOjB,EAAP,KAAakB,EAAb,KACA,EAA8BD,mBAAS,GAAvC,mBAAOhB,EAAP,KAAgBkB,EAAhB,KACA,EAAsBF,mBAAS,GAA/B,mBAAOf,EAAP,KAAYkB,EAAZ,KACA,EAA0BH,mBAAS,GAAnC,mBAAOd,EAAP,KAAckB,EAAd,KACA,EAAoDJ,mBAAS,GAA7D,mBAAOb,EAAP,KAA2BkB,EAA3B,KA0BA,OARAC,qBAAU,WACRF,EAASrB,EAAOC,EAAUC,KACzB,CAACF,EAAMC,EAASC,IAEnBqB,qBAAU,WACRD,EAAsBE,KAAKC,MAAc,IAAPzB,EAAcG,MAC/C,CAACA,EAAOH,IAGT,sBAAKU,UAAU,MAAf,UACE,uDACA,cAACG,EAAD,UACE,cAACR,EAAD,CACEE,QAAS,CAAC,OAAQ,UAAW,OAC7BD,gBA9BgB,SAACG,GACvB,OAAQA,GACN,IAAK,OACHS,EAAQlB,EAAO,GACf,MACF,IAAK,UACHmB,EAAWlB,EAAU,GACrB,MACF,IAAK,MACHmB,EAAOlB,EAAM,GACb,MAEF,QAAS,aAqBE,IAAVC,EACC,cAACU,EAAD,UACE,cAACD,EAAD,MAGF,cAACC,EAAD,CAASC,MAAO,aAAhB,SACE,cAAChB,EAAD,CACEE,KAAMA,EACNC,QAASA,EACTC,IAAKA,EACLC,MAAOA,EACPC,mBAAoBA,UCtDhCsB,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,W","file":"static/js/main.01d3b670.chunk.js","sourcesContent":["import PropTypes from \"prop-types\"\r\n\r\nexport default function Statistics(props) {\r\n    const { good, neutral, bad, total, positivePercentage } = props;\r\n    return (\r\n        <>\r\n            <p>Good: <span>{good}</span></p>\r\n            <p>Neutral: <span>{ neutral}</span></p>\r\n            <p>Bad: <span>{bad}</span></p>\r\n            <p>Total: <span>{total}</span></p>\r\n            <p>Positive feedback: {total === 0 ? 0 : <span>{positivePercentage}</span> }%</p>\r\n        </>\r\n    )\r\n}\r\n\r\nStatistics.propTypes = {\r\n    good: PropTypes.number.isRequired,\r\n    neutral: PropTypes.number.isRequired,\r\n    bad: PropTypes.number.isRequired,\r\n    total: PropTypes.number.isRequired,\r\n    positivePercentage: PropTypes.number.isRequired,\r\n}","import PropTypes from \"prop-types\";\r\nimport \"./FeedbackOption.scss\";\r\n\r\nexport default function FeedbackOptions(props) {\r\n    const { onLeaveFeedback, options } = props;\r\n    return (\r\n    <>\r\n      {options.map((name) => {\r\n        return (\r\n          <button key={name} className={`btn ${name}`} onClick={()=>onLeaveFeedback(name)}>\r\n            {name}\r\n          </button>\r\n        );\r\n      })}\r\n    </>\r\n  );\r\n}\r\n\r\nFeedbackOptions.propTypes = {\r\n    onLeaveFeedback: PropTypes.func.isRequired,\r\n    options: PropTypes.arrayOf(PropTypes.string),    \r\n}; \r\n\r\n","export default function Notification() {\r\n  return (\r\n    <p>No feedback given</p>\r\n  );\r\n}\r\n","import PropTypes from \"prop-types\"\r\n\r\nexport default function Section(props) {\r\n  const { title, children } = props;\r\n  return (\r\n    <>\r\n      <h2>{title}</h2>\r\n      {children}\r\n    </>\r\n  );\r\n}\r\n\r\nSection.propTypes = {\r\n    title: PropTypes.string,\r\n    children: PropTypes.element.isRequired,\r\n}","import { useState, useEffect } from \"react\";\nimport Statistics from \"./components/Statistics\";\nimport FeedbackOptions from \"./components/FeedbackOptions\";\nimport Notification from \"./components/Notification\";\nimport Section from \"./components/Section\";\nimport \"./App.css\";\n\n\nfunction App() {\n  const [good, setGood] = useState(0);\n  const [neutral, setNeutral] = useState(0);\n  const [bad, setBad] = useState(0);\n  const [total, setTotal] = useState(0);\n  const [positivePercentage, setPositivePercentage] = useState(0);\n\n  const onLeaveFeedback = (name) => {\n    switch (name) {\n      case 'good':\n        setGood(good + 1)\n        break;\n      case 'neutral':\n        setNeutral(neutral + 1)\n        break;\n      case 'bad':\n        setBad(bad + 1)\n        break;\n      \n      default: return;\n    }\n  }\n\n  useEffect(() => {\n    setTotal(good + neutral + bad);\n  }, [good, neutral, bad]);\n\n  useEffect(() => {\n    setPositivePercentage(Math.round((good * 100) / total));\n  }, [total, good]);\n\n  return (\n    <div className=\"App\">\n      <h1>Please leave feedback</h1>\n      <Section>\n        <FeedbackOptions\n          options={['good', 'neutral', 'bad']}\n          onLeaveFeedback={onLeaveFeedback}\n        />\n      </Section>\n      {total === 0 ? (\n        <Section>\n          <Notification/>\n        </Section>\n      ) : (\n        <Section title={\"Statistics\"}>\n          <Statistics\n            good={good}\n            neutral={neutral}\n            bad={bad}\n            total={total}\n            positivePercentage={positivePercentage}\n          />\n        </Section>\n      )}\n    </div>\n  );\n}\n\nexport default App;","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n"],"sourceRoot":""}